/*  
    자식 요소를 한줄로 배치
      1) display:inline-block
        - 글자 꼬리 공백, 태그 공백
      2) float:left or right
      3) display : flex (최근 방식)

    flex
      1) flex Container : 자식 요소들이 옆으로 나열되기 원하는 부모 요소
        - display : flex;
        - flex-direction: row; (default)
                          row-reverse (float:right 같은 개념)
                          column (수직 축을 기준으로 나열)
                          column-reverse
        - flex-wrap: nowrap (default) 브라우저 너비에 맞춰 자식요소의 너비가 결정됨
                     wrap (브라우저 너비가 축소되어도 자식요소의 너비 유지(마지막 요소부터 줄 변경))
                     wrap-reverse (wrap과 동일하나 첫번째 요소부터 줄 변경)
        - justify-content : 주 축의 정렬 방법을 설정
          1) flex-direction: row;
            주축:x축, 교차축:y축
          2) flex-direction: column;
            주축:y축, 교차축:x축
          값 : flex-start(default) : 왼쪽 정렬
               flex-end : 오른쪽 정렬
               center : 가운데 정렬
               space-around : 요소 간 좌우 여백을 동일하게 부여(여백이 만나는 경우 커지게 됨)
               space-between : 첫 요소 왼쪽 끝, 마지막요소 오른쪽 끝 배치 후 나머지 공간 할당 
               space-evenly : 요소들 간의 모든 공간 균일하게               

        - align-content : 교차축의 정렬 방법(flex-wrap:wrap 일때 작동)
          1) strech (default) : 자식의 높이가 지정되지 않았을 때 자식요소를 늘려버림
          2) flex-start : y축 상단에 정렬
             flex-end : y축 하단에 정렬
             center : y축 가운데 정렬
             space-around,between,evenly

    2) flex Item : 옆으로 나열될 자식요소 설정
        order : 자식 요소 순서 설정(기본값 0, 음수값 지정시 앞쪽으로 이동)
        flex-grow : 자식 요소 너비 증가 비율 설정(숫자가 클수록 더 많은 너비 할당)
        flex-shrink : 자식 요소 너비 감소 비율 설정
                      1 (default)
        flex-basis : 자식 요소가 가지고 있는 컨텐츠를 포함하여 전체 너비가 같게 포현
                     flex-grow : 1 => content가 가지고 있는 부분을 제외하고 남아있는 여백을 기준으로 늘어남
          
*/
.container {
  display: flex;
  border: 4px solid;
}
.container2 {
  display: flex;
  border: 4px solid;
}
.container3 {
  display: flex;
  border: 4px solid blue;
}
.item {
  width: 100px;
  height: 100px;
  background: tomato;
  border: 4px dashed red;
  display: flex;
  justify-content: center;
  align-items: center;
}
.item1 {
  order: 1;
}

.container2 .item:nth-child(1) {
  background: #ffc447;
}
.container2 .item:nth-child(2) {
  background: #e87635;
}
.container2 .item:nth-child(3) {
  background: #d335e8;
}
.container2 .item:nth-child(4) {
  background: #ff4847;
}

.grow1 .item:nth-child(1) {
  flex-grow: 0;
}
.grow1 .item:nth-child(2) {
  flex-grow: 0;
}
.grow1 .item:nth-child(3) {
  flex-grow: 0;
}
.grow1 .item:nth-child(4) {
  flex-grow: 1;
}

.grow2 .item:nth-child(1) {
  flex-grow: 1;
}
.grow2 .item:nth-child(2) {
  flex-grow: 3;
}
.grow2 .item:nth-child(3) {
  flex-grow: 1;
}
.grow2 .item:nth-child(4) {
  flex-grow: 0;
}

.grow3 .item:nth-child(1) {
  flex-grow: 1;
}
.grow3 .item:nth-child(2) {
  flex-grow: 2;
}
.grow3 .item:nth-child(3) {
  flex-grow: 1;
}
.grow3 .item:nth-child(4) {
  flex-grow: 2;
}

.container3 .item {
  height: 100px;
  background: tomato;
  border: 4px dashed red;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 1 1 0;
  /* flex: 1 1 auto; 컨텐츠를 제외한 너비만 동일 */
}
